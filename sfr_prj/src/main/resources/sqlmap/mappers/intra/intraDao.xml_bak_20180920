<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="intra.intra">


	<!-- 군 코드 와 상위부서 코드로 하위부서 리스트 가져옴  -->
	<select id="selectDeptList" parameterType="map" resultType="egovMap">
		SELECT  *
		FROM (	
			SELECT MILDSC
			     , (SELECT C.CD_INS_NM FROM TBL_CODE C WHERE CD = '100' AND CD_INS_ID = A.MILDSC) AS MILDSC_NM 
			     , DEPT_CD 
			     , (SELECT B.DEPT_NM FROM TBL_DEPT B WHERE B.DEPT_CD = A.DEPT_CD) AS DEPT_NM
			     , (SELECT B.FULL_DEPT_NM FROM TBL_DEPT B WHERE B.DEPT_CD = A.DEPT_CD) AS FULL_DEPT_NM
			     , TELNO 
			     , RANK 
			     , NM
	   		     , RSPOFC_NM
	   		     , RSPSBLT_BIZNES 
			     , MPNO  
			     , ROWNUM AS rnum
			FROM   TBL_USER A
			WHERE  1=1
			AND    MILDSC = #{mildsc}
			AND    DEPT_CD = #{deptCd}
			AND    ROWNUM  <![CDATA[ <= ]]> #{endRowNum} 
		    ORDER BY DEPT_CD, rspofc_nm)
		    WHERE rnum <![CDATA[ >= ]]> #{startRowNum}
		
		
	</select>
	
	<!-- 군 코드 와 상위부서 코드로 하위부서 리스트 갯수  -->
	<select  id="getDeptCount" resultType="int" parameterType="map">
	
		SELECT COUNT(*) 
		FROM tbl_user
		WHERE 1=1
		AND MILDSC = #{mildsc}
		AND DEPT_CD = #{deptCd}
		ORDER BY DEPT_CD, rspofc_nm
		
	</select>
	
	
	<!-- 시설물 리스트 가져오기   -->
	<select id="selectfacilityList" parameterType="map" resultType="egovMap">
		SELECT  *
		FROM (	
			SELECT MILDSC
			     , (SELECT C.CD_INS_NM FROM TBL_CODE C WHERE CD = '100' AND CD_INS_ID = A.MILDSC) AS MILDSC_NM 
			     , DEPT_CD 
			     , (SELECT B.DEPT_NM FROM TBL_DEPT B WHERE B.DEPT_CD = A.DEPT_CD) AS DEPT_NM
			     , (SELECT B.FULL_DEPT_NM FROM TBL_DEPT B WHERE B.DEPT_CD = A.DEPT_CD) AS FULL_DEPT_NM
			     , facility_nm
			     , TEL 
			     , ROWNUM AS rnum
			FROM   TBL_facility A 
			WHERE  1=1
			AND    MILDSC = #{mildsc}
			AND    DEPT_CD = #{deptCd}
			AND    ROWNUM  <![CDATA[ <= ]]> #{endRowNum} 
		    ORDER BY DEPT_CD)
		    WHERE rnum <![CDATA[ >= ]]> #{startRowNum}
	</select>
	
	<!-- 시설물 총 카운트   -->
	<select  id="getfacilityCount" resultType="int" parameterType="map">
	
		SELECT COUNT(*) 
		FROM TBL_facility 
		WHERE 1=1
		AND MILDSC = #{mildsc}
		AND DEPT_CD = #{deptCd}
		ORDER BY DEPT_CD
		
	</select>
	
	<!-- 군 코드 와 전화번호로  부서 번호 가져옴  -->
	<select id="selectDeptTel" parameterType="map" resultType="egovMap">
		
		SELECT MILDSC, DEPT_CD, DEPT_NM, ORDER_NO, DEPT_ABRVWD, DEPT_ABRVWD2, Full_DEPT_NM, HGRNK_DEPT_CD, TELNO 
		FROM tbl_dept
		WHERE 1=1
		AND TELNO = #{telno}
		AND ROWNUM = 1
		
	</select>
	
	
	<!-- 군 코드 와 부서 코드로 부서에 소속된 user 리스트 가져옴  -->
	<select id="selectDeptUserList" parameterType="map" resultType="egovMap">
		
		SELECT ID, NM, DEPT_CD, MIL_NO, RSPSBLT_BIZNES, RANK, RSPOFC_NM, TELNO, MPNO, EMAIL
		FROM TBL_USER 
		WHERE	1=1
		AND MILDSC = #{mildsc}
		AND DEPT_CD = #{hgrnkDeptCd}
		
	</select>
	
	
	<!-- 공지사항(게시판) 가져옴  -->
	<select id="selectBoardListAjax" parameterType="map" resultType="egovMap">
		
		SELECT *
			FROM (
				SELECT SEQ
				     , BOARD_CD
				     , TITLE
				     , CONTENT
				     , STATE
				     , CNT
				     , TO_CHAR(REG_DT,  'YYYY-MM-DD') REG_DT
				     , REG_ID, REG_MILDSC
				     , UPT_DT
				     , UPT_ID
				     , UPT_MILDSC
				     , ROWNUM AS rnum
				FROM TBL_BOARD  
				WHERE	1=1 
				AND BOARD_CD = #{boardCd}
				AND    ROWNUM  <![CDATA[ <= ]]> #{endRowNum} 
				ORDER BY seq desc)
				WHERE rnum <![CDATA[ >= ]]> #{startRowNum}
		
	</select>
	
	
	<!-- 공지사항(게시판) 가져옴  -->
	<select id="selectBoardList" parameterType="map" resultType="egovMap">
		
		SELECT ROWNUM, A.*
			FROM (
				SELECT SEQ
					 , BOARD_CD
					 , TITLE
					 , CONTENT
					 , STATE
					 , CNT
					 , REG_DT
					 , REG_ID
					 , REG_MILDSC
					 , UPT_DT
					 , UPT_ID
					 , UPT_MILDSC
					 , (SELECT COUNT(*) FROM tbl_board_atch A WHERE  A.tbl_pk = FILEATCH_NUM) AS ATCH_CNT
				FROM TBL_BOARD  
				WHERE	1=1 
				AND BOARD_CD = #{boardCd}
				ORDER BY seq desc
			) A
		WHERE 1=1
		AND	ROWNUM BETWEEN #{firstIndex}+1 AND #{lastIndex} 
		
	</select>
	
	<select id="getTotalCount" parameterType="map" resultType="int">
		SELECT COUNT(*)	
		FROM  TBL_BOARD  
		WHERE  1=1
		AND BOARD_CD= #{boardCd}
	
	</select>
	
	<!-- 공지사항(게시판) 상세  -->
	<select id="selectBoardDetail" parameterType="map" resultType="egovMap">
		
		SELECT SEQ
			 , BOARD_CD
			 , TITLE
			 , CONTENT
			 , STATE
			 , CNT
			 , REG_DT
			 , REG_ID
			 , REG_MILDSC
			 , UPT_DT
			 , UPT_ID
			 , UPT_MILDSC
			 , FILEATCH_NUM
		FROM TBL_BOARD  
		WHERE	1=1
		AND SEQ = #{seq}
		AND BOARD_CD= #{boardCd}
				
		
	</select>
	
	
	<!-- 공지사항(게시판) 조회수 ++  -->
	<update id="updateBoardCnt" parameterType="map" >
		
		UPDATE TBL_BOARD 
		SET
		 CNT = (SELECT CNT+1 FROM TBL_BOARD WHERE 1=1 AND SEQ = #{seq}	AND BOARD_CD= #{boardCd})
		WHERE 1=1
		AND SEQ = #{seq}
		AND BOARD_CD= #{boardCd}
		
	</update>
	
	
	
	<!-- 즐겨찾기 list (최근 20 개) -->
	<select id="selectBookmarkListAjax" parameterType="map" resultType="egovMap">
			SELECT *
			FROM (
				SELECT   A.SEQ
			           , B.ID AS BOOKMARK_USER_ID
			           , B.NM AS BOOKMARK_USER_NM
			           , B.TELNO AS BOOKMARK_USER_TELNO
			           , B.MPNO AS BOOKMARK_USER_MPNO
			           , B.RANK AS BOOKMARK_USER_RANK
			           , B.RSPOFC_NM AS BOOKMARK_USER_RSPOFC_NM
			           , B.RSPSBLT_BIZNES AS BOOKMARK_USER_RSPSBLT_BIZNES
			           , (SELECT A.cd_ins_nm FROM tbl_code A WHERE cd='100' AND B.MILDSC = A.cd_ins_id) AS MILDSC_NM
			           , C.DEPT_NM AS BOOKMARK_DEPT_NM
			           , C.FULL_DEPT_NM AS BOOKMARK_FULL_DEPT_NM
			           , C.TELNO AS BOOKMARK_DEPT_TENO 
			           , ROWNUM AS rnum
				FROM TBL_BOOKMARK_USER A 
				LEFT JOIN TBL_USER B ON A.BOOKMARK_MILDSC = B.MILDSC AND A.BOOKMARK_DEPT_CD = B.DEPT_CD AND A.BOOKMARK_ID = B.ID
				LEFT JOIN TBL_DEPT C ON A.BOOKMARK_MILDSC = C.MILDSC AND A.BOOKMARK_DEPT_CD = C.DEPT_CD
				WHERE 1=1
				AND A.MILDSC = #{mildsc}
				AND A.ID = #{id}
				AND ROWNUM  <![CDATA[ <= ]]> #{endRowNum} 
				ORDER BY A.SEQ DESC )
				WHERE rnum <![CDATA[ >= ]]> #{startRowNum}
	</select>
	
	<select id="selectBookmarkList" parameterType="map" resultType="egovMap">
				
			SELECT ROWNUM, A.*
			FROM (
				SELECT   A.SEQ
			           , B.ID AS BOOKMARK_USER_ID
			           , B.NM AS BOOKMARK_USER_NM
			           , B.TELNO AS BOOKMARK_USER_TELNO
			           , B.MPNO AS BOOKMARK_USER_MPNO
			           , B.RANK AS BOOKMARK_USER_RANK
			           , B.RSPOFC_NM AS BOOKMARK_USER_RSPOFC_NM
			           , B.RSPSBLT_BIZNES AS BOOKMARK_USER_RSPSBLT_BIZNES
			           , (SELECT A.cd_ins_nm FROM tbl_code A WHERE cd='100' AND B.MILDSC = A.cd_ins_id) AS MILDSC_NM
			           , C.DEPT_NM AS BOOKMARK_DEPT_NM
			           , C.FULL_DEPT_NM AS BOOKMARK_FULL_DEPT_NM
			           , C.TELNO AS BOOKMARK_DEPT_TENO 
			           , DECODE(D.GROUP_NM, NULL, '', D.GROUP_NM) AS GROUP_NM
                 	   , DECODE(D.GROUP_NM, NULL, '2 ', '1') AS GROUP_NUM
				FROM TBL_BOOKMARK_USER A 
				LEFT JOIN TBL_USER B ON A.BOOKMARK_MILDSC = B.MILDSC AND A.BOOKMARK_DEPT_CD = B.DEPT_CD AND A.BOOKMARK_ID = B.ID
				LEFT JOIN TBL_DEPT C ON A.BOOKMARK_MILDSC = C.MILDSC AND A.BOOKMARK_DEPT_CD = C.DEPT_CD
				LEFT JOIN TBL_BOOKMARK_GROUP D ON A.GROUP_ID = D.SEQ
				WHERE 1=1
				AND A.MILDSC = #{mildsc}
				AND A.ID = #{id}
				ORDER BY GROUP_NUM, GROUP_NM, A.REG_DT DESC 
			) A
		WHERE 1=1
				AND	ROWNUM BETWEEN #{firstIndex}+1 AND #{lastIndex} 
	</select>
	<!--즐겨찾기 카운트   -->
	<select id="getBookmarkCount" resultType="int" parameterType="map">
	
		SELECT COUNT(*) 
		FROM TBL_BOOKMARK_USER
		WHERE 1=1
		AND MILDSC = #{mildsc}
		AND ID = #{id}
	</select>
	
	<!-- 즐겨찾기 삭제  -->
	<delete id="deleteBookmarK" parameterType="map" >
		
		DELETE FROM	tbl_bookmark_user
		WHERE  	1=1
		AND	seq = #{seq}
		AND mildsc = #{mildsc}
		AND id =  #{id}
	
	</delete>
	
	
	
	<!-- 즐겨찾기 추가 -->
	<insert id="insertBookmark" parameterType="map" >
		
		INSERT INTO TBL_BOOKMARK_USER(	mildsc
								,		id
								,		bookmark_mildsc
								,		bookmark_id
								,		bookmark_dept_cd
								,		reg_dt	
								,  		group_id
								)
		VALUES(
			#{mildsc}
			,#{id}
			,#{bookmarkMildsc}
			,#{bookmarkId}
			,#{bookmarkDeptCd}
			,SYSDATETIME
			, #{bookmarkGroupId}
		)
		
	</insert>
	
	
	
	<!-- 검색이력 list (최근 10 개) -->
	<select id="selectSearchHistList" parameterType="map" resultType="egovMap">
		
		SELECT SEQ, MILDSC, ID, USER_CD, SECHWD, TO_CHAR (REG_DT, 'YYYY-MM-DD') AS REG_DT
		FROM TBL_SRCH_LOG
		WHERE 1=1
		AND MILDSC = #{mildsc}
		AND ID = #{id}
		AND ROWNUM <![CDATA[ <= ]]> 10
		ORDER BY SEQ DESC 
		
	</select>
	
	<!-- 검색이력 추가 -->
	<insert id="insertSearchHist" parameterType="map" >
		
		INSERT INTO TBL_SRCH_LOG(mildsc,		id,		user_cd,		srch_methd,		sechwd,		reg_ip,		reg_dt)
		VALUES(
			 #{mildsc}
			,#{id}
			,#{userCd}
			,''
			,#{sechwd}
			,#{regIp}
			,SYSDATETIME
		)
		
	</insert>
	
	<!-- 즐겨찾기 체크  -->
	<select id="BookUserCk" parameterType="map" resultType="int">
		SELECT COUNT(*) 
		FROM   TBL_BOOKMARK_USER 
		WHERE  id = #{id}
		AND    bookmark_id = #{bookmarkId}
		AND    bookmark_dept_cd = #{bookmarkDeptCd} 
	</select>
	
	
	<!-- 일반사용자 로그인  -->
	<select id="intraLogin" parameterType="map" resultType="egovMap">
		SELECT	a.mildsc,	a.id,	a.pw,	a.nm,	a.dept_cd, b.dept_nm, b.full_dept_nm, 	
				a.mil_no, a.rspsblt_biznes,	a.RANK,	a.rspofc_nm,	a.telno,	 a.mpno,	 
				a.email,	a.opnpbl_yn,	a.state
		FROM
			tbl_user a
			LEFT JOIN  tbl_dept b ON a.dept_cd = b.dept_cd
		WHERE 1=1
			AND a.mildsc =	#{mildsc}
			AND	a.mil_no =	#{id}
	</select>

	<select id="intraLoginA" parameterType="map" resultType="egovMap">
		SELECT	a.mildsc,	a.id,	a.pw,	a.nm,	a.dept_cd, b.dept_nm, b.full_dept_nm, 	
			a.mil_no, a.rspsblt_biznes,	a.RANK,	a.rspofc_nm,	a.telno,	 a.mpno,	 
			a.email,	a.opnpbl_yn,	a.state
	        FROM
			tbl_user a
		LEFT JOIN  tbl_dept b ON a.dept_cd = b.dept_cd
		WHERE 1=1
		AND a.mildsc =	#{mildsc}
		AND a.id = #{id}
	</select>

	<!-- DEPT TREE  -->
	<select id="selectDeptTree" parameterType="map" resultType="egovMap">
		SELECT	DEPT_CD AS ID, DEPT_NM AS TEXT,  HGRNK_DEPT_CD AS PARENT , LEVEL
		FROM    TBL_DEPT   
		START WITH HGRNK_DEPT_CD = #{hgrnkDeptCd} AND MILDSC = #{mildsc}  CONNECT BY PRIOR DEPT_CD = HGRNK_DEPT_CD
		
		<if test='mildsc!="C"'>	
		ORDER SIBLINGS BY ORDER_NO
		  </if>
		
		<if test='mildsc=="C"'>	
		ORDER SIBLINGS BY DEPT_CD
		  </if>   
	</select>
	
	<!-- 
	<select id="selectDeptTree" parameterType="map" resultType="egovMap">
		SELECT	MILDSC, DEPT_CD AS ID, DEPT_NM AS TEXT, ORDER_NO, DEPT_ABRVWD, DEPT_ABRVWD2, Full_DEPT_NM, HGRNK_DEPT_CD AS PARENT, TELNO 
		FROM
			TBL_DEPT
		 START WITH HGRNK_DEPT_CD = #{hgrnkDeptCd} AND MILDSC = #{mildsc} CONNECT BY PRIOR DEPT_CD = HGRNK_DEPT_CD 
	</select>
	 -->
	 
	 	<!-- Q&A Board  --> 
	<insert id="insertQnaBoard" parameterType="map" >
		MERGE INTO tbl_qnaboard a USING db_root
		ON   a.seq = #{seq}       
		WHEN MATCHED THEN 
			<if test='reply=="P"'>	
					UPDATE SET
						a.title = #{title},
						a.content = CHAR_TO_CLOB(#{content}),
						a.upt_dt = SYSDATETIME,
						a.upt_id = #{regId},
						a.upt_mildsc = #{mildsc} 
					WHERE	1=1
						AND	a.seq = #{seq}
						AND a.board_cd = #{boardCd}	
			</if>
			<if test='reply=="C"'>	
			 		UPDATE SET 
						a.content = CHAR_TO_CLOB(#{content}),
						a.upt_dt = SYSDATETIME,
						a.upt_id = #{regId},
						a.upt_mildsc = #{mildsc} 
					WHERE
						1=1
						AND	a.seq = #{seq}
						AND a.parent_cd = #{parentcd}
						AND a.board_cd = #{boardCd}	
			</if>			  
		WHEN NOT MATCHED THEN    
			<if test='reply=="P"'>	
				INSERT (		a.board_cd
				                       ,	a.title
				                       ,	a.content
				                       ,	a.cnt
				                       ,	a.reg_dt
				                       ,	a.reg_id
				                       ,	a.reg_mildsc )
					VALUES (
						 #{boardCd}
						,#{title}
						,#{content}
						,'0'
						,SYSDATETIME
						,#{regId}
						,#{mildsc}  )
			</if>   
					
		 	<if test='reply=="C"'>	
					INSERT (	 a.parent_cd
					                  	 ,	a.board_cd
				                       ,	a.title
				                       ,	a.content
				                       ,	a.cnt
				                       ,	a.reg_dt
				                       ,	a.reg_id
				                       ,	a.reg_mildsc )
						VALUES (
							 	 #{parentcd}
								,#{boardCd}
								,#{title}
								,#{content}
								,'0'
								,SYSDATETIME
								,#{regId}
								,#{mildsc} )
	 	 </if>
	</insert>
	
		<!-- Q&A Board  삭제  -->
	<delete id="deleteQnaBoard" parameterType="map" >
		<if test='reply=="P"'>
		    DELETE FROM	TBL_QNABOARD
				WHERE  	1=1
				AND ( seq=#{seq}  OR parent_cd=#{seq} )
		</if>
				 
		<if test='reply=="C"'>
		    DELETE FROM	TBL_QNABOARD
				WHERE  	1=1
				AND seq=#{seq}  
		</if>
	</delete>
	
		<!--Q&A 카운트   -->
	<select id="getQnaCount" resultType="int" parameterType="map">
		SELECT SUM(c.cnt) FROM
		(  
			     SELECT COUNT(*) cnt
				FROM TBL_QNABOARD  a JOIN tbl_user b ON a.reg_id = b.mil_no 
				WHERE 1=1 
	 	UNION ALL
				SELECT COUNT(*) cnt
				FROM TBL_QNABOARD  a JOIN tbl_mngr b ON  b.mngr_id=a.reg_id 
				WHERE 1=1 
		) c
		
	</select>
	
	<select id="selectQnaBoardList" parameterType="map" resultType="egovMap">
		 SELECT ROWNUM, A.*
			FROM (	 
				    SELECT T1.* ,
					             RANK() OVER (PARTITION BY DECODE(T1.parent_cd, NULL,T1.seq, T1.parent_cd) ORDER BY DECODE(T1.parent_cd, NULL,T1.seq, T1.parent_cd) desc ) as rk 
						FROM  ( 
						  SELECT
								a.seq,
								DECODE(a.parent_cd, NULL,'P', 'C') parent_gb,
								DECODE(a.parent_cd, NULL,a.seq, a.parent_cd) parent_cd,
								a.board_cd, 
								DECODE(a.parent_cd, NULL,a.title,'    └ ' || a.content)  title,
								a.content,
								a.cnt,
								a.reg_dt,
								a.reg_id,
								b.nm,
								a.reg_mildsc
							FROM
								TBL_QNABOARD  a JOIN tbl_user b ON a.reg_id = b.mil_no 
					 UNION 
			        SELECT
									a.seq,
									DECODE(a.parent_cd, NULL,'P', 'C') parent_gb,
									DECODE(a.parent_cd, NULL,a.seq, a.parent_cd) parent_cd,
									a.board_cd, 
									DECODE(a.parent_cd, NULL,a.title,'    └ ' || a.content)  title,
									a.content,
									a.cnt,
									a.reg_dt,
									a.reg_id,
									b.mngr_id,
									a.reg_mildsc
							FROM
								TBL_QNABOARD  a JOIN tbl_mngr b ON  b.mngr_id=a.reg_id 
							) T1
						) A
				WHERE 1=1
			<if test="seq != null and !seq.equals('')">
				AND (a.seq=#{seq} OR a.seq =#{replyseq})
			</if>
			<if test="firstIndex != null">
				AND	ROWNUM BETWEEN #{firstIndex}+1 AND #{lastIndex} 
			</if>			
				
	</select>
	
		<!--Q&A 카운트   -->
	<select id="selectDual" resultType="int" parameterType="map">
		SELECT COUNT(lang ) AS A FROM db_root  WHERE 1=1 
	</select>

  <!-- 공지사항(게시판) 가져옴  -->
  <select id="selectBookmarkGroupAjax" parameterType="map" resultType="egovMap">
    
    SELECT *
      FROM (
        SELECT SEQ
             , GROUP_NM
             , TO_DATE(REG_DT, 'YYYYMMDD') REG_DT
             , REG_ID
             , UPT_DT
             , UPT_ID
             , ROWNUM AS rnum
        FROM TBL_BOOKMARK_GROUP  
        WHERE 1=1 
        AND ID = #{id}
        AND    ROWNUM  <![CDATA[ <= ]]> #{endRowNum} 
        ORDER BY GROUP_NM)
        WHERE rnum <![CDATA[ >= ]]> #{startRowNum}
    
  </select>
  
  
  <!-- 공지사항(게시판) 가져옴  -->
  <select id="selectBookmarkGroupList" parameterType="map" resultType="egovMap">
    
    SELECT ROWNUM, A.*
      FROM (
        SELECT SEQ
             , GROUP_NM
             , TO_DATE(REG_DT, 'YYYYMMDD') AS REG_DT
             , REG_ID
             , UPT_DT
             , UPT_ID
        FROM TBL_BOOKMARK_GROUP  
        WHERE 1=1 
        AND ID = #{id}
        ORDER BY GROUP_NM
      ) A
    WHERE 1=1
    AND ROWNUM BETWEEN #{firstIndex}+1 AND #{lastIndex} 
    
  </select>
  
  <!--즐겨찾기 그룹 카운트   -->
  <select id="getBookmarkGroupCount" parameterType="map" resultType="int">
    SELECT COUNT(*) 
    FROM TBL_BOOKMARK_GROUP
    WHERE 1=1
    AND ID = #{id}
  
  </select>  
  
  <!-- 즐겨찾기 그룹 삭제  -->
  <delete id="deleteBookmarkGroup" parameterType="map" >
   
    UPDATE TBL_BOOKMARK_USER
       SET GROUP_ID = NULL
     WHERE GROUP_ID = #{seq}; 
     
    DELETE FROM TBL_BOOKMARK_GROUP
    WHERE   1=1
    AND seq=#{seq};  
   
  </delete>
  
  <!-- 즐겨찾기 그룹 등록 -->
  <insert id="saveBkmkGroupNm" parameterType="map" >

    <if test='pType=="I"'>
        INSERT INTO tbl_bookmark_group (
           group_nm
         , id
         , reg_dt                 
         , reg_tm
         , reg_id
         , upt_dt                 
         , upt_tm
         , upt_id          
        ) VALUES (
          #{group_nm}
        , #{id}
        , TO_CHAR(SYSDATE, 'YYYYMMDD')
        , TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
        , #{id}
        , TO_CHAR(SYSDATE, 'YYYYMMDD')
        , TO_CHAR(SYSTIMESTAMP, 'HH24MISS')
        , #{id}
        )
    </if>
    
    
    <if test='pType=="U"'>
        UPDATE tbl_bookmark_group SET
               group_nm = #{group_nm}         
             , upt_id = #{id}
             , upt_dt = TO_CHAR(SYSDATE, 'YYYYMMDD')
             , upt_tm = TO_CHAR(SYSTIMESTAMP, 'HH24MISS') 
         WHERE 1=1
           AND seq = #{seq}
    </if>

  </insert>  
  
  <!-- 개인 즐겨찾기 그룹 리스트 가져오기  -->
  <select id="selectGroupNm" parameterType="map" resultType="egovMap">

    SELECT SEQ AS GROUP_CD
         , GROUP_NM AS GROUP_NM
      FROM tbl_bookmark_group
     WHERE ID = #{id}
     ORDER BY GROUP_NM        
    
  </select>  

    <!-- 즐겨찾기 그룹 등록 -->
  <insert id="updateBkmkUserGroup" parameterType="map" >
    UPDATE TBL_BOOKMARK_USER
          SET GROUP_ID = #{group_id}
     WHERE SEQ = #{seq}
        AND MILDSC = #{mildsc}  
        AND ID = #{id}

  </insert>  
	
  <!-- 게시물 첨부파일 정보 조회 -->
  <!-- <select id="selectFile" parameterType="java.util.HashMap" resultType="kr.co.twoksystem.vo.TbFileVO"> -->
  <select id="selectFile" parameterType="map" resultType="egovMap">
    SELECT  ROWNUM AS row_no
          , t1.fl_id
          , t1.tbl_nm
          , t1.tbl_pk
          , t1.loc_fl_nm
          , t1.svr_fl_nm
          , t1.svr_sv_pth
          , t1.fl_sz
          , t1.use_yn
          , t1.reg_dt
          , t1.reg_tm
          , t1.reg_id
          , t1.upt_dt
          , t1.upt_tm
          , t1.upt_id
      FROM  tbl_board_atch  t1
     WHERE  t1.fl_id = #{fl_id}
  </select>	
	
  <select id="fileList" parameterType="map" resultType="egovMap">
    SELECT  ROWNUM ROW_NO
         , T1.FL_ID
         , T1.TBL_NM
         , T1.TBL_PK
         , T1.TBL_PK2
         , T1.LOC_FL_NM
         , T1.SVR_FL_NM
         , T1.SVR_SV_PTH
         , T1.FL_SZ
         , T1.USE_YN
         , REG_DT
         , REG_TM
         , REG_ID
         , UPT_DT
         , UPT_TM
         , UPT_ID
         , 'X' AS FILE_DELETE
         , IF(LENGTH(FL_SZ) <![CDATA[ < ]]>4, FL_SZ, CEIL(FL_SZ/1024)|| 'KB') AS FL_KB_SZ
    FROM  TBL_BOARD_ATCH  T1
    WHERE 1 = 1
      AND USE_YN = 'Y'  
      AND T1.TBL_NM = #{tbl_nm}
      AND T1.TBL_PK = #{tbl_pk}
      <if test = "tbl_pk2 != null and !tbl_pk2.equals('')">
      AND T1.TBL_PK2 = #{tbl_pk2}
      </if>
      ORDER BY REG_DT ASC, REG_TM ASC
  </select>  	
	
</mapper>
