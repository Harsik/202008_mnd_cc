#******************************************************************************
# User Define Field Layout	Copyright 2004 (c)ForceWin Inc.      2010/03/02
#******************************************************************************
# 사용자 정의 Field를 정의하는 Layout입니다.
# 또한 Layout Parser의 Parsing의 시작은 이 파일에서 부터 시작됩니다.
# 즉 Layout에 포함 시키고자 하는 파일은 이 파일에 $include로 포함시켜야 합니다.
# (단, laytou.get, layout.acs, layout.mod파일은 이 Rule을 따르지 않습니다.)
#******************************************************************************
$include layout.def
$include layout.int

data-table: User Fileds
{
#==============================================================================
# <FORMAT>
#	field_type: field_name  field_size  data_type field_value
#		/option_name=option_value
# <FIELD_TYPE>
#   varwidth : 가변 길이 필드임을 지정함
#   fixwidth : 고정 길이 필드임을 지정함
#   dispatch : 필드 자체의 값을 파일의 전체 이름으로 하는 파일의 내용이 들어옴
#              dispatch필드는 자동으로 keyword색인을 하며 내용은 저장되지 않
#              는다. 필드 자체의 값이 파일이름이 아닌 경우 getmethod에 의해 
#              이의 인식 방법을 지정하여야 한다.
#   system   : 시스템 명령어를 사용할 수 있다.(현재는 사용되지 않음)
# <DATA_TYPE>
#   unsigned-integer : 부호 없는 숫자형
#                      (단, field_size의 값은 1, 2, 4 중 하나여야 함)
#   signed-integer   : 부호있는 숫자형
#                      (단, field_size의 값은 1, 2, 4 중 하나여야 함)
#   text             : 문자열 형
#   date             : 날짜 형 (단, field_size의 4Byte로 적어야 함)
# <field_size>
#   필드 크기를 byte단위로 지정한다. 생략이 가능하며 생략하면 text필드는 5000
#    byte. 그외의 필드는 4byte가 기본으로 잡히게 된다. 지정된 크기를 넘는 값은
#    색인시 무시되게 된다.
# <FIELD_VALUE>
#   Accessor나 Bulk File에 의해 필드의 값을 제공하지 않더라도 Field_Value를 
#   Layout에 지정함으로 값을 입력할 수 있다. 즉 상수형(constant)값을 제공하거나
#   간단한 연산에 의해 문자열의 결합, 숫자의 계산등에 사용될 수 있다.
#   또한 이전에 정의한 Field의 값을 재 참조하거나 간단한 연산이 가능함.
#   $[field명] : 이전에 정의된 Field값을 참조 한다.
#   $[field명/start/length] : 문자형 필드인 경우 사용되면 이전 필드의 값 중
#    일부 값을 참조하기 위해 사용한다. start의 값이 없으면 start는 1로 간주되며
#    length값이 없으면 해당 필드의 크기에 해당된다.
#   \는 위의 필드정의 패턴을 무효화 한다. 또한 \\는 \를 출력하기 위해 사용한다.
#   \t은 <tab>, \n은 <newline>, \r은 <linefeed>를 나타낸다.
#   숫자형 필드에서는 +[더하기],-[빼기],*[곱하기],/[나누기],%[나머지],(,)[우선 
#   순위]등의 숫자 연산이 가능하다.   
#   명심해야 할 것은 참조할 Field는 Field_Value가 정의되는 필드보다 먼저 정의
#   되어 있어야 한다.
#   예)
#      varwidth: attach 256 text  $[filepath/3/5]/$[filename].txt
#      fixwidth: average  4 unsigned-integer  (($[level]+$[score])/2)
#
# <OPTION>
#   /keyword=[yes|no]: 이 필드의 값으로 색인어 검색을 하려면 yes로 한다.
#                      default는 no이다.
#   /index=[yes|no|flag]: 이 필드의 값을 이용해 필드검색하려면 yes|flag로 한다. 
#                      - yes : 기본 색인을 생성
#                      - flag : 성별구별 필드와 같이 값자체가 몇가지 값으로
#                             한정된 필드에 대해 색인하는 경우 사용
#                      default는 no이다.
#   /minmax=[yes|no] : 이 필드의 data type이 text이고 index=yes일 경우 
#                      색인시에 색인 속도를 빠르게 하기 위해 문자들의 
#                      비교를 값을 yes로 지정하여 128byte까지로 제한할 
#                      수 있다. 단, 필드 검색시에도 이값이 yes로 지정되면
#                      128byte이상은 같다고 비교하지 않고 검색된다.
#                      default는 no이다.
#   /case=[yes|no]   : 이 필드의 data type이 text이고 index=yes일 경우 
#                      이 필드에 저장된 값을 이용한 필드 검색시에 
#                      case sensitive하게 검색하려면 yes로 한다. 
#                      default는 no이다.
#   /parent=field명  : 이 필드가 계층적 구조를 가지고 있다면 부모 필드 
#                       이름을 적는다. default는 계층적 구조를 가지지 않는다.
#   /alias=별명      : 이 필드에 대한 또 다른 이름을 사용하기 위하여 기입한다. 
#                       default는 별명이 없다.
#   /modifier=modifier명 : 이 필드에 사용할 modifier가 있다면 그에 대한 이름을 
#                      적는다. 이때 이름은 laytou.mod에 정의된 이름을 사용한다.
#   /wordweight=[yes|no] : 이 필드는 각 색인어가될 단어의 앞에 [가중치]가 
#                       적어져 있어야 하며 색인시 각 색인어에 이 가중치를 
#                       반영한다. default는 no이다.
#   /weight=가중치   : keyword=yes일 경우 필드별로 가중치를 지정 할 수 있다. 
#                      0~100점 사이의 값을 지정한다. default는 50이다.
#   /factor=[yes|no] : 현재 필드를 SSummary 로 사용할 필드를 지정한다. 
#                      default는 no이다.
#                      Summary는 factor가 지정된 field를 대상으로 요약문을 
#                      추출하게 된다.
#                      또한, 이 옵션이 지정된 필드는 layout.def의 _MIR_SAVE_BODY
#                      매크로가 yes로 지정된 경우의 본문 저장 대상 필드로 
#                      여겨진다.
#   /similar=[yes|no] : 유사문서 검색을 위한 Factor추출 필드를 지정한다. 
#                       layout.def의 _MIR_INDEX_FACTORS 매크로가 yes로 지정되
#                       어 있다면 /similar옵션이 yes로 지정된 필드를 대상으로
#                       유사문서 검색이 가능하다.
#   /getmethod=method명 : 이 필드가 dispatch필드라면 이 옵션을 사용할 수 있다.
#                      method명은 layout.get에 정의되어 있는 이름이여야 한다.
#   /save=[yes|no] : 이 필드에 들어오는 값 자체를 저장할 필요가 없을 경우 no를
#                    지정하여 Collection의 크기를 줄일 수 있다. 단, no인 경우
#                    검색시 zone검색외에 이 필드에 대한 다른 검색 값의 참조를
#                    할수 없다. default는 yes이다.
#   /hidden=[yes|no] : 일반적으로 /keyword=yes 옵션에 의해 색인된 경우 검색시 
#                     zone을 지정하지 않는(<in>연산자를 사용하지 않는) 일반 
#                     키워드 검색의 검색 대상 필드로 간주된다.
#                     이 검색 대상에서 현재 필드를 제외하고 싶다면 이 옵션을 
#                     yes로 지정한다. 기본값은 no이다.
#   /sortmap=[yes|no] : 필드의 값으로 정렬하고자 하는 경우 정렬속도를 향상시키기
#                    위해 색인시 Sort Map을 생성한다. 기본값은 no이다.
#   /charset=[특정문자열] : 문자열 필드의 입력 문자열 코드를 변환하기 위해 사용
#                    한다. 기본적으로는 특별한 변환을 하지 않으며 다음과 같은 값
#                    을 사용할 수 있다.
#                     UTF8->EUC_KR   : 한글 UTF8코드를 EUC-KR코드로 변환
#                     EUC_KR->UTF8   : 한글 EUC_KR코드를 UTF8코드로 변환
#                     UTF8->CP949    : 한글 UTF8코드를 CP949코드로 변환
#                     CP949->UTF8    : 한글 CP949코드를 UTF8코드로 변환
#                     UTF8->KSSM     : 한글 UTF8코드를 KSSM(조합형)코드로 변환
#                     KSSM->UTF8     : 한글 KSSM(조합형)코드를 UTF8코드로 변환
#                     EUC_KR->KSSM   : 한글 EUC-KR코드를 KSSM(조합형)코드로 변환
#                     KSSM->EUC_KR   : 한글 KSSM(조합형)코드를 EUC_KR코드로 변환
#                     CP949->KSSM    : 한글 CP949코드를 KSSM(조합형)코드로 변환
#                     KSSM->CP949    : 한글 KSSM(조합형)코드를 CP949코드로 변환
#                     UTF8->SJIS     : 일본어 UTF8코드를 SJIS코드로 변환
#                     SJIS->UTF8     : 일본어 SJIS코드를 UTF8코드로 변환
#                     UTF8->EUC_JP   : 일본어 UTF8코드를 EUC-JP코드로 변환
#                     EUC_JP->UTF8   : 일본어 EUC-JP코드를 UTF8코드로 변환
#                     EUC_JP->SJIS   : 일본어 EUC-JP코드를 SJIS코드로 변환
#                     SJIS->EUC_JP   : 일본어 SJIS코드를 EUC-JP코드로 변환
#                     UTF8->GB       : 중국어 UTF8코드를 GB코드로 변환
#                     GB->UTF8       : 중국어 GB코드를 UTF8코드로 변환
#                     GB->BIG5       : 중국어 GB코드를 BIG5코드로 변환
#                     BIG5->GB       : 중국어 BIG5코드를 GB코드로 변환
#==============================================================================

###############################################################################
# 아래의 정의 마침 문자"}" 사이에 사용자 정의 Field를 정의한다.
#예)
#	varwidth: title		100	text
#		/index=yes
#		/keyword=yes
###############################################################################


#등록일
varwidth:REG_DT		4	date
	/index=yes

#군별
varwidth:MILDSC		4	text
	/keyword=yes
	/index=yes

#아이디
varwidth:ID		100	text
	/charset=UTF8->EUC_KR

#비밀번호
varwidth:PW		100	text
		
#이름
varwidth:NM		100	text
	/keyword=yes
	/index=yes
	/charset=UTF8->EUC_KR

#부서코드
varwidth:DEPT_CD	50	text
		
#군번
varwidth:MIL_NO		50	text

#군별(이름)
varwidth:MILDSC_NM      30      text
	/keyword=yes
	/charset=UTF8->EUC_KR
		
#담당업무
varwidth:RSPSBLT_BIZNES		300	text
	/keyword=yes
	/charset=UTF8->EUC_KR
		
#계급
varwidth:RANK		50	text
	/keyword=yes
	/charset=UTF8->EUC_KR
		
#직책명
varwidth:RSPOFC_NM	100	text
	/charset=UTF8->EUC_KR
		
#전화번호
varwidth:TELNO		50	text
	/keyword=yes
	/index=yes
	/charset=UTF8->EUC_KR
		
varwidth:TELTEST	50	text
	/keyword=yes
	/charset=UTF8->EUC_KR

#휴대폰번호
varwidth:MPNO		50	text
		
#이메일
varwidth:EMAIL		100	text
		
#공개여부
varwidth:OPNPBL_YN	4	text
		
#상태
varwidth:STATE		4	text

#부서명
varwidth:DEPT_NM	200	text
	/charset=UTF8->EUC_KR

varwidth:KEYWORD_AREA	430	text	$[DEPT_NM]$[RSPSBLT_BIZNES]$[NM]$[TELNO]

#부서약어
varwidth:DEPT_ABRVWD	30	text
	/charset=UTF8->EUC_KR

#부서약어2
varwidth:DEPT_ABRVWD2	30	text
	/charset=UTF8->EUC_KR

#전체부서명
varwidth:FULL_DEPT_NM	400	text
	/keyword=yes
	/index=yes
	/charset=UTF8->EUC_KR
}
$$
